plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

ext {
	springCloudVersion = "2024.0.1"
}

group = 'com.gucci'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.github.Gachon-Univ-Creative-Code-Innovation:alog-common:v1.0.2'

	//jwt 토큰 관련 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//swagger
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"

	//oci
	implementation 'com.oracle.oci.sdk:oci-java-sdk-objectstorage:3.38.0'
	implementation 'com.oracle.oci.sdk:oci-java-sdk:3.38.0'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-common:3.38.0'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-common-httpclient:3.38.0'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-common-httpclient-choices:3.38.0'
	implementation ('com.oracle.oci.sdk:oci-java-sdk-common-httpclient-jersey3:3.37.0')

	//aws
	implementation 'software.amazon.awssdk:s3:2.20.0'
	implementation 'software.amazon.awssdk:core:2.20.0'
	implementation 'software.amazon.awssdk:auth:2.20.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
